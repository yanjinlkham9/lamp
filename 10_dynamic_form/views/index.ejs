<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>동적폼(ajax, axios, fetch)</title>
    <!-- jQuery CDN -->
    <script
      src="https://code.jquery.com/jquery-3.7.1.min.js"
      integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo="
      crossorigin="anonymous"
    ></script>
    <!-- axios cdn -->
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
  </head>
  <style>
    .result {
      font-size: 24px;
      font-weight: bold;
    }
  </style>
  <body>
    <h1>동적폼 전송 연습하기</h1>
    <form name="register">
      <label for="name">이름:</label>
      <input type="text" name="name" id="name" required />
      <br />
      <span>성별:</span>
      <input type="radio" name="gender" id="male" value="남성" required />
      <label for="male">남자</label>
      <input type="radio" name="gender" id="female" value="여성" />
      <label for="female">여자</label>

      <br /><br />
      <button type="button" onclick="ajaxGet()">Ajax GET 제출</button>
      <button type="button" onclick="ajaxPOST()">Ajax POST 제출</button>
      <br />
      <button type="button" onclick="axiosGet()">axios GET 제출</button>
      <button type="button" onclick="axiosPOST()">axios POST 제출</button>
      <br />
      <button type="button" onclick="fetchGet()">fetch GET 제출</button>
      <button type="button" onclick="fetchPost()">fetch POST 제출</button>
    </form>
    <div class="result"></div>
    <hr />
    <a href="/api">외부 api 사용</a>
    <hr />
    <a href="practice1">practice1</a>
    <a href="practice2">practice2</a>
    <script>
      const resultBox = document.querySelector(".result");
      function ajaxGet() {
        const form = document.forms["register"]; //form 선택 form ner n register
        console.log(form);
        console.log(form.name);
        console.log(form.gender);
        console.log(form.gender.lenght); //2
        console.log(form.gender.value); // "" "남성" "여성"

        // button type button은 required 동작하지 않음
        //유효성 검증 따로 해주기
        if (form.name.value.trim() === "") {
          alert("이름을 입력");
          return;
        }
        if (form.gender.value.trim() === "") {
          alert("성별을 입력");
          return;
        }

        // -----ajax 요청-----------
        //보낼 데이터 객체형태로 만들기
        const data = {
          name: form.name.value, //이름
          gender: form.gender.value, //여성 or 남성
        };
        // ajax 사용
        $.ajax({
          type: "get", //어떤 method-으로 보낼건지 (get, post, delete)
          url: "/ajax", //form의 action에 해당하는 곳
          data: data, //서버로 넘겨줄 데이터

          //통신이 성공했을때
          success: function (res) {
            //통신 이후에 일어날 일들
            console.log(res);
            resultBox.textContent = `GET /ajax 요청 완료 ${res.name}의 성별을 ${res.gender}`;
          },
          //통신이 실패 시
          error: function (err) {
            console.log("err", err);
          },
        });
      }
      function ajaxPOST() {
        const form = document.forms["register"];
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };
        $.ajax({
          type: "post",
          url: "/ajax",
          data: data,
          success: function (data) {
            //server ugch bga data utga orj irne
            console.log(data);
            resultBox.textContent = `POST /ajax 요청 완료 ${data.name}의 성별을 ${data.gender}`;
          },
          error: function (error) {
            console.log(error);
          },
        });
      }
      async function axiosGet() {
        const form = document.forms["register"];
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };
        // 유효성 검사 - checkValidity
        //required가 있으면 기입 됐는지 검사해줌
        /*
         - required 속성이 없는 항목 > 무조건 true 반환
         - required 속성이 있는 항목 >
             - 기입을 했다면 true
             - 기입을 하지 않았다면 false (utga dr yu ch bichj temdegleegui bol)
         */
        console.log(form.name.checkValidity()); //input[name="name"]
        console.log(form.gender[0].checkValidity()); //radio n olon bolohor array이고, ali neg dr n shalgahad garch irne

        if (!form.name.checkValidity()) {
          resultBox.innerText = "이름을 입력해주세요";
          //   resultBox.innerText = form.name.validationMessage;
          return;
        }

        if (!form.gender[0].checkValidity()) {
          resultBox.innerText = "성별을 선택해주세요";
          //   resultBox.innerText = form.gender[0].validationMessage; //다음 옵션 중 하나를 선택하세요.
          return;
        }
        //--------axios 요청----------------

        // 1. then ~ catch 사용

        // axios({
        //   method: "get",
        //   url: "/axios",
        //   params: data, //get 요청일 때 params에 담아서 요청
        // })
        //   .then(function (response) {
        //     //통신에 성공했을 때
        //     console.log(response); // songoson name, gender 그대로 뜨지 않다
        //     console.log(response.data); //server-s ugch bui data
        //     // console.log(response.status);
        //     // console.log(response.statusText);
        //     // console.log(response.headers);
        //     // console.log(response.config);
        //     resultBox.textContent = `GET /axios then catch 요청 완료 ${response.data.name}의 성별은 ${response.data.gender}`;
        //     resultBox.style.color = "green";
        //   })
        //   .catch(function (err) {
        //     //통신에 실패 할때
        //     console.error("error");
        //     console.log(err);
        //   });

        // 2. async~ await
        // error 처리를 try catch 문을 사용해서 해주는거 좋다
        try {
          const response = await axios({
            method: "get",
            url: `/axios?name=${data.name}&gender=${data.gender}`,
          });
          console.log(response);
          console.log(response.data);
          const { name, gender } = response.data;
          resultBox.textContent = `GET /axios async, await 요청 완료 ${name}의 성별은 ${gender}`;
          resultBox.style.color = "coral";
        } catch (err) {
          console.error("err", err);
        }
      }
      async function axiosPOST() {
        const form = document.forms["register"];
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };
        try {
          const res = await axios({
            method: "post",
            url: "/axios",
            data: data,
          });
          console.log(res);
          console.log("실제 데이터", res.data);
          const { name: 이름, gender: 성별 } = res.data;
          resultBox.textContent = `POST axios 요청 완료 ${이름}의 성별은 ${성별}`;
          resultBox.style.color = "pink";
        } catch (err) {
          console.error(err);
        }
      }

      function fetchGet() {
        const form = document.forms["register"];
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };
        // fetch("/fetch", {
        //   method: "get",
        // });
        //fetch의 default method는 GET
        fetch(`/fetch?name=${data.name}&gender=${data.gender}`)
          .then((response) => {
            console.log(response);
            //server-s butsagdaj bgaa response ter chigere orj ireed response가 text bval text()-r solino
            //response-r object orj irverl json()-r solino
            return response.text(); //서버에서 넘어온 문자열 뽑아내기 위해 text()메소도 시용
            return response.json();
          })
          .then((res) => {
            console.log(res);
            resultBox.textContent = `fetch get 요청 완료. ${res.name}의 성별은 ${res.gender}`;
            resultBox.style.color = "limegreen";
          })
          .catch((err) => {
            console.error("err", err);
          });
      }
      async function fetchPost() {
        const form = document.forms["register"];
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };
        try {
          const res = await fetch("/fetch", {
            method: "post",
            body: JSON.stringify(data), //json 형식으로 보내야 함
            headers: {
              "Content-Type": "application/json",
            },
          });
          console.log(res);

          //json() text() >> 시간이 걸리는 작업
          const result = await res.json();
          console.log(result);
          const { name, gender } = result;
          resultBox.textContent = `fetch post 요청 완료. ${name}의 성별은 ${gender}`;
          resultBox.style.color = "aqua";
        } catch (err) {
          console.error("err:", err);
        }
      }
    </script>
  </body>
</html>
